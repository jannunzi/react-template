[{"/Users/jannunzi/template-projects/react-template/src/index.js":"1","/Users/jannunzi/template-projects/react-template/src/reportWebVitals.js":"2","/Users/jannunzi/template-projects/react-template/src/App.js":"3","/Users/jannunzi/template-projects/react-template/src/components/session-attributes.js":"4","/Users/jannunzi/template-projects/react-template/src/components/generic/DataTable.js":"5","/Users/jannunzi/template-projects/react-template/src/components/generic/DataRecord.js":"6","/Users/jannunzi/template-projects/react-template/src/components/generic/DataField.js":"7"},{"size":593,"mtime":1607657075284,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607652957360,"results":"10","hashOfConfig":"9"},{"size":4112,"mtime":1608127018887,"results":"11","hashOfConfig":"9"},{"size":2862,"mtime":1607696908934,"results":"12","hashOfConfig":"9"},{"size":4159,"mtime":1608125713760,"results":"13","hashOfConfig":"9"},{"size":2693,"mtime":1608126918925,"results":"14","hashOfConfig":"9"},{"size":6794,"mtime":1608127456862,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"mgk8xv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jannunzi/template-projects/react-template/src/index.js",[],["32","33"],"/Users/jannunzi/template-projects/react-template/src/reportWebVitals.js",[],"/Users/jannunzi/template-projects/react-template/src/App.js",[],"/Users/jannunzi/template-projects/react-template/src/components/session-attributes.js",["34"],"import React, {useState, useEffect} from 'react'\n\nconst SessionAttributes = () => {\n\n  const [attribute1, setAttribute1] = useState(\"\")\n  const [value1, setValue1] = useState(\"\")\n\n  const [attribute2, setAttribute2] = useState(\"\")\n  const [value2, setValue2] = useState(\"\")\n\n  const [serverUrl, setServerUrl] = useState(\"\")\n\n  const setSessionAttributeInServer = (attribute, value) => {\n    fetch(`${serverUrl}/session/set/${attribute}/${value}`, {\n      credentials: \"include\"\n    })\n      .then(response => response.text())\n      .then(text => console.log(text))\n  }\n  const getSessionAttributeFromServer = (attribute) => {\n    fetch(`${serverUrl}/session/get/${attribute}`, {\n      credentials: \"include\"\n    })\n      .then(response => response.text())\n      .then(text => setValue2(text))\n  }\n\n  return(\n    <div>\n      <h1>Session Attributes</h1>\n      <hr/>\n      <h2>Server URL</h2>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <input\n            list=\"server-url\"\n            className=\"form-control\"\n            onChange={(event) => setServerUrl(event.target.value)}\n            value={serverUrl}/>\n          <datalist id=\"server-url\">\n            <option\n              value=\"http://spring-template-jga.herokuapp.com\"/>\n            <option\n              value=\"http://node-template-jga.herokuapp.com\"/>\n          </datalist>\n        </div>\n      </div>\n      <hr/>\n      <h2>Set Attribute</h2>\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <input\n            value={attribute1}\n            onChange={(event) => setAttribute1(event.target.value)}\n            className=\"form-control\"/>\n        </div>\n        <div className=\"col-5\">\n          <input\n            value={value1}\n            onChange={(event) => setValue1(event.target.value)}\n            className=\"form-control\"/>\n        </div>\n        <div className=\"col-2\">\n          <button\n            onClick={() => setSessionAttributeInServer(attribute1, value1)}\n            className=\"btn btn-block btn-primary\">\n            Set Attribute\n          </button>\n        </div>\n      </div>\n      <hr/>\n      <h2>Get Attribute</h2>\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <input\n            value={attribute2}\n            onChange={(event) => setAttribute2(event.target.value)}\n            className=\"form-control\"/>\n        </div>\n        <div className=\"col-5\">\n          <input\n            value={value2}\n            readOnly={true}\n            onChange={() => {}}\n            className=\"form-control\"/>\n        </div>\n        <div className=\"col-2\">\n          <button\n            onClick={() => getSessionAttributeFromServer(attribute2)}\n            className=\"btn btn-block btn-primary\">\n            Get Attribute\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SessionAttributes\n","/Users/jannunzi/template-projects/react-template/src/components/generic/DataTable.js",["35","36"],"/Users/jannunzi/template-projects/react-template/src/components/generic/DataRecord.js",["37"],"/Users/jannunzi/template-projects/react-template/src/components/generic/DataField.js",["38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":26,"nodeType":"45","messageId":"46","endLine":1,"endColumn":35},{"ruleId":"43","severity":1,"message":"47","line":2,"column":9,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":28,"column":6,"nodeType":"50","endLine":28,"endColumn":8,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":54,"column":6,"nodeType":"50","endLine":54,"endColumn":8,"suggestions":"53"},{"ruleId":"43","severity":1,"message":"54","line":84,"column":31,"nodeType":"45","messageId":"46","endLine":84,"endColumn":38},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'neuid' and 'table.name'. Either include them or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'findRecordById', 'id', 'match.params.id', and 'pathIdIndex'. Either include them or remove the dependency array.",["58"],"'checked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [neuid, table.name]",{"range":"63","text":"64"},"Update the dependencies array to be: [findRecordById, id, match.params.id, pathIdIndex]",{"range":"65","text":"66"},[862,864],"[neuid, table.name]",[1358,1360],"[findRecordById, id, match.params.id, pathIdIndex]"]